const { query, all, run } = require('../../server/turso-db');

/**
 * Migration: Ajouter la colonne credits directement dans la table users
 *
 * Raison: Simplifier l'acc√®s aux cr√©dits en √©vitant une table s√©par√©e
 * Les cr√©dits sont maintenant stock√©s directement dans users.credits
 *
 * Note: On garde user_credits pour compatibilit√© mais on va migrer les donn√©es
 */

async function up() {
    console.log('üìù Adding credits column to users table...');

    // √âtape 1 : Ajouter la colonne si elle n'existe pas
    try {
        await query(`
            ALTER TABLE users
            ADD COLUMN credits INTEGER NOT NULL DEFAULT 5
        `);
        console.log('‚úÖ Credits column added to users');
    } catch (error) {
        if (error.message.includes('duplicate column name')) {
            console.log('‚ö†Ô∏è  Credits column already exists');
        } else {
            throw error;
        }
    }

    // √âtape 2 : Migrer les cr√©dits existants depuis user_credits vers users
    // Cette √©tape s'ex√©cute TOUJOURS, m√™me si la colonne existait d√©j√†
    console.log('üîÑ Migrating existing credits from user_credits to users...');

    const userCredits = await all('SELECT user_id, credits FROM user_credits');

    for (const uc of userCredits) {
        await run(
            'UPDATE users SET credits = ? WHERE id = ?',
            [uc.credits, uc.user_id]
        );
    }

    console.log(`‚úÖ Migrated credits for ${userCredits.length} users`);
}

async function down() {
    console.log('üìù Removing credits column from users table...');

    // SQLite ne supporte pas DROP COLUMN directement
    // Il faudrait recr√©er la table sans la colonne
    console.log('‚ö†Ô∏è  Rollback not fully supported in SQLite (DROP COLUMN)');
    console.log('   Please restore from backup if needed');
}

module.exports = { up, down };
